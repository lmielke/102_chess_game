{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"102",
				"102_chess_game"
			],
			[
				"clone",
				"cloneProjectUrl"
			],
			[
				"cloneP",
				"cloneProjectPath"
			],
			[
				"onbe",
				"onbeforeunload〔function〕"
			],
			[
				"par",
				"parentNode"
			],
			[
				"activ",
				"activePlayer"
			],
			[
				"moveFi",
				"moveFigureParent〔variable〕"
			],
			[
				"movefig",
				"moveFigureParent〔variable〕"
			],
			[
				"che",
				"checkBox1〔variable〕"
			],
			[
				"nonze",
				"nonzeroIndexs"
			],
			[
				"non",
				"nonzeroIndexs"
			],
			[
				"acti",
				"activePlayer"
			],
			[
				"os_",
				"os_replace_last_elem_with_fname\tos_replace_last_elem_with_fname"
			],
			[
				"py_",
				"py_str_cut_end\tpy_str_cut_end"
			],
			[
				"padding-",
				"padding-left: 〔property〕"
			],
			[
				"pd_",
				"pd_df_move_col_to_front\tpd_df_move_col_to_front"
			],
			[
				"board",
				"boardSaves"
			],
			[
				"sub",
				"subn〔function〕"
			],
			[
				"removed",
				"removedirs〔function〕"
			],
			[
				"remo",
				"removedirs〔function〕"
			],
			[
				"make",
				"makedirs〔function〕"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"activate",
				"activate_this.py"
			],
			[
				"pd_io_loa",
				"pd_io_xls_load_single_OR_multip\tpd_io_xls_load_single_OR_multip"
			],
			[
				"py_io",
				"py_io_pickle_save\tpy_io_pickle_save"
			],
			[
				"np_",
				"np_concat_tile_3d\tnp_concat_tile_3d"
			],
			[
				"pd_io",
				"pd_io_html_load_modify\tpd_io_html_load_modify"
			],
			[
				"mo",
				"monthrange〔function〕"
			],
			[
				"pd_io_",
				"pd_io_json_loads\tpd_io_json_loads."
			],
			[
				"np_r",
				"np_random_float_normal\tnp_random_float_normal"
			],
			[
				"py_su",
				"py_subprocess_launch_app_in_venv\tpy_subprocess_launch_app_in_venv"
			],
			[
				"boar",
				"boardState"
			],
			[
				"fli",
				"flip_board"
			],
			[
				"pawn",
				"pawnStart"
			],
			[
				"re",
				"re_datetime_snippet\tre_datetime_str"
			],
			[
				"bo",
				"boardState\tstatement"
			],
			[
				"combinat",
				"combinations_with_replacement\tfunction"
			],
			[
				"combinatio",
				"combinations_with_replacement〔class〕"
			],
			[
				"travers",
				"traversal\tstatement"
			],
			[
				"tra",
				"traversal"
			],
			[
				"traver",
				"traversal_type"
			],
			[
				"sucess",
				"success_url\tstatement"
			],
			[
				"SignUpC",
				"SignUpCreateView"
			],
			[
				"SEC",
				"SECRET_KEY"
			],
			[
				"para",
				"para_dict"
			],
			[
				"grid-au",
				"grid-auto-rows\tproperty"
			],
			[
				"in_con",
				"in_container_loc"
			],
			[
				"is",
				"is_authenticated"
			],
			[
				"url",
				"url_is_exempt"
			],
			[
				"Url",
				"url_is_exempt"
			],
			[
				"L",
				"LOGIN_EXEMPT_URLS"
			],
			[
				"PRODU",
				"PRODUCTION_IP"
			],
			[
				"dtst",
				"dtstr_day"
			],
			[
				"in_obj",
				"in_obj_db_loc"
			],
			[
				"do_trans",
				"do_transport_remote_file"
			],
			[
				"pro",
				"PRODUCTION_IP"
			],
			[
				"PRO",
				"PRODUCTION_IP"
			],
			[
				"get_o",
				"get_object_or_404"
			],
			[
				"User",
				"UserUpdateForm"
			],
			[
				"Us",
				"UserCreationForm"
			],
			[
				"my_r",
				"my_range_h"
			],
			[
				"my",
				"my_range_l"
			],
			[
				"in_src",
				"in_srcyear"
			],
			[
				"in_attachment",
				"in_attachment_name"
			],
			[
				"exter",
				"extracted_bos"
			],
			[
				"extra",
				"extracted_text"
			],
			[
				"mail_",
				"mail_number"
			],
			[
				"do_get_",
				"do_get_mails_contents"
			],
			[
				"f",
				"f"
			],
			[
				"pop",
				"pop_word"
			],
			[
				"uniq",
				"unique_words"
			],
			[
				"tmp_in",
				"tmp_in_cum_stats_1"
			],
			[
				"new_",
				"new_word_stats"
			],
			[
				"nw",
				"new_word_stats"
			],
			[
				"in_comple",
				"in_completion_datetime"
			],
			[
				"ob",
				"object_list"
			],
			[
				"desc",
				"describe_list"
			],
			[
				"pattern",
				"file_name_pattern"
			],
			[
				"channel",
				"channel_data"
			],
			[
				"tmp_",
				"tmp_in_cls_body"
			],
			[
				"do_wr",
				"do_write_inst"
			],
			[
				"process",
				"process_id"
			],
			[
				"in_out",
				"in_output_style"
			],
			[
				"in_outp",
				"in_output_style_pattern"
			],
			[
				"cl_pa",
				"cl_params_loc"
			],
			[
				"in_topics",
				"in_topics_terms"
			],
			[
				"in_pars",
				"in_parse_result"
			],
			[
				"cl_p",
				"cl_params_ext"
			],
			[
				"cl",
				"cl_params_loc"
			],
			[
				"cl_para",
				"cl_params_loc"
			],
			[
				"cl_",
				"cl_params_ext"
			],
			[
				"cl_par",
				"cl_params_ext"
			],
			[
				"clobj",
				"clobject_location"
			],
			[
				"page",
				"page_title"
			],
			[
				"clob",
				"clobject_location"
			],
			[
				"border_",
				"border_bottom"
			],
			[
				"get",
				"get_legal_moves"
			],
			[
				"twin",
				"twin_values_temp"
			],
			[
				"di",
				"diagonal_unitsa"
			],
			[
				"diago",
				"diagonal_unitsd"
			],
			[
				"w_hl",
				"w_hlayer_drop"
			],
			[
				"train",
				"train_rec_count"
			],
			[
				"test",
				"test_rec_count"
			],
			[
				"review",
				"reviews_test"
			],
			[
				"ab",
				"absolute_correct"
			],
			[
				"abs",
				"absolute_false"
			],
			[
				"rew",
				"reviews_test"
			],
			[
				"w_c",
				"w_cnt_1"
			],
			[
				"revie",
				"reviews_test"
			],
			[
				"nr",
				"nr_ol"
			],
			[
				"outp",
				"output_error_term"
			],
			[
				"hid",
				"hidden_error_term"
			],
			[
				"hi",
				"hidden_layer_in"
			],
			[
				"output",
				"output_layer_in"
			],
			[
				"learn",
				"learnrate"
			],
			[
				"ta",
				"targets_test"
			],
			[
				"b_",
				"b_gradient"
			],
			[
				"num",
				"num_iterations"
			],
			[
				"lear",
				"learning_rate"
			],
			[
				"m",
				"m"
			],
			[
				"la",
				"laos_life_exp"
			],
			[
				"b",
				"bmi_life_model"
			],
			[
				"article",
				"article_chain"
			],
			[
				"arti",
				"article_chain"
			],
			[
				"fi",
				"first_relative_link"
			],
			[
				"mat",
				"matrix1"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/python_venvs/122_chess_play/web_project/web_project/settings.py",
			"settings":
			{
				"buffer_size": 5279,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/python_venvs/122_chess_play/web_project/chess/static/drag_and_drop.js",
			"settings":
			{
				"buffer_size": 16661,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/python_venvs/122_chess_play/web_project/chess/test.py",
			"settings":
			{
				"buffer_size": 137,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/python_venvs/pipenv_setup.py",
			"settings":
			{
				"buffer_size": 5941,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n# coding: utf-8\n\n# # 102_chess_game\n# ## This Notebook is for documentation only. You should not run the code directly. To use auto install, use readme_setup.py as specified below.\n\n# # 1. What am I\n\n# This is a simple django template with some pre implemented features such as:\n# - user signup, email confirmation,\n# - user logon, password create/change\n# - user authorization middleware\n# - blog style article/blog page to allow in tool documentation and commenting\n# - some param settings to allow multiple domains to map to this template (you may not need this, to remove, you have to make some changes the existing models and forms)\n# - some pre defined css sheet\n# \n# To install in development, clone this repo and install the requirements.txt from the resources folder.\n\n# # 2. Development Setup and installation using the code below (Windows only)\n\n# I use this installer because it meets my personal preferences. Use at own risk! Do not run this notebook directly but use readme_setup.py file instead. This will create a environment and install the requirements.txt.\n# \n# If on Windows, use cmds below:\n# 1. Clone repo into folder in which this repo will exist          --> (cd [venvs folder] && git clone https://github.com/lmielke/102_chess_game.git)\n# 2. Copy the readme_setup.py file into your venvs folder        --> (cd 102_chess_game && copy readme_setup.py .. && cd ..)\n# 3. Run readme_setup.py with arguments yourProjectName(repo will be renamed to) hostname(IP or localhost) --> (readme_setup.py 102_new_name http://localhost:8000)\n#     NOTE: The readme_setup.py is a nbconvert of this notebook. If necessary  it can be created by typing (jupyter nbconvert --to script readme_setup.ipynb) inside the repo folder.\n# 4. Remove setup file --> (del/rm readme_setup.py)\n\n# ## 2.1. here comes the code\n\n# In[25]:\n\n\nimport multiprocessing, os, re, shutil, subprocess, sys, time\nimport argparse\n\n\n# In[26]:\n\n\nparser = argparse.ArgumentParser(description=\"wtf\")\nparser.add_argument('yourProjectName', help='folder Name your project will exsist as')\nparser.add_argument('yourHost', help='prod: IP, dev: http://localhost:8000')\nparser.add_argument('-pid', type=int, required=False, help='internally used pid to cancel init process')\n\nvenvsPath = os.getcwd()\ncloneProjectName = \"102_chess_game\"\nyourProjectName = parser.parse_args().yourProjectName\nprint(f\"your new project will be in: {venvsPath}/{yourProjectName}\")\nyourProjectPath = os.path.join(venvsPath, yourProjectName)\ndjProjectPath = os.path.join(yourProjectPath, \"web_project\")\nnewEnvActPy = os.path.join(yourProjectPath, \"venv\", \"Scripts\", \"activate_this.py\")\n\n\n# ### 2.1.1. Does all install work such as rename repo, install and activate venv, run migrations\n\n# In[27]:\n\n\ndef main(*args):\n    # copies dj_setup.py from your local repository to django folder (its currently added to .gitignore do not upload this to a public repo)\n    myStuffPath = os.path.join(venvsPath, \"99_snipp_block\", \"dj_conf_files\", \"my_stuff.py\")\n    existingEnvironments = os.listdir(venvsPath)\n    if yourProjectName in existingEnvironments:\n        print(f\"AN Environement with name {yourProjectName} already exists in {venvsPath} \\n{existingEnvironments}\")\n        print(\"you have 15 secs to abort by pressing Ctrl+C now\")\n        time.sleep(15)\n    else:\n        print(\"ready to go\")\n    os.chdir(venvsPath)\n    # renames the template to what ever name you like\n    if cloneProjectName != yourProjectName: os.rename(cloneProjectName, yourProjectName)\n    # creates the envirionment inside yourProjectPath/venv folder\n    subprocess.call([\"python\", \"-m\", \"venv\", os.path.join(yourProjectPath, \"venv\")], shell=True)\n    # this copies files to allow subprocess to activate your environment\n    shutil.copyfile(os.path.join(yourProjectPath, \"resources\", \"activate_this.py\"), newEnvActPy)\n\n    try:\n        print(myStuffPath)\n        shutil.copyfile(myStuffPath, os.path.join(yourProjectPath, \"web_project\", \"web_project\", \"my_stuff.py\"))\n    except:\n        raise Exception(\"copying my_stuff.py failed because path does not exist! You have to manually adjust my_stuff.py. Its location is same as settings.py\")\n\n    exec(open(newEnvActPy).read(), {'__file__': newEnvActPy})\n    # all relevant programs are installed and/or updated\n    # feel free to add or remove programs\n    subprocess.call([\"python\", \"-m\", \"pip\", \"install\", \"--upgrade\", \"pip\"], shell=True)\n    subprocess.call([\"pip\", \"install\", \"--upgrade\", \"setuptools\"], shell=True)\n\n    # i use pyperclip inside some service scripts, its not needed for this repo to run, you can remove it\n    subprocess.call([\"pip\", \"install\", \"pyperclip\"], shell=True)\n\n    # this installs the requirements.txt\n    subprocess.call([\"pip\", \"install\", \"-r\", os.path.join(yourProjectPath, \"resources\", \"requirements.txt\")], shell=True)\n\n    djProjectPaht = os.path.join(yourProjectPath, \"web_project\")\n    os.chdir(djProjectPaht)\n    print(f\"your manage.py is under {os.getcwd()}\")\n    subprocess.call(['python', 'manage.py', 'makemigrations'], shell=True)\n    subprocess.call(['python', 'manage.py', 'migrate'], shell=True)\n    return djProjectPath, newEnvActPy\n\n\n# ### 2.1.2. Runs the django dev server (manage.py runserver) to test if its there\n\n# In[28]:\n\n\ndef run_server(*args):\n    exec(open(newEnvActPy).read(), dict(__file__ = newEnvActPy))\n    os.chdir(djProjectPath)\n    subprocess.call(['python', 'manage.py', 'runserver'], shell=True)\n    return True\n\n\n# ### 2.1.3. Tests the django dev server and kills it after response check\n\n# In[29]:\n\n\ndef test_server():\n    import requests, time\n    from datetime import datetime as dt\n    from datetime import timedelta as td\n    time.sleep(5)\n    # CHPID is a comment in i_navbar_bottom.html template\n    match = re.compile(r\"(<CHPID>)(\\d{3,6})(</CHPID>)\")\n    prcId = re.search(match, requests.get(parser.parse_args().yourHost).text)[2]\n    subprocess.call(['TASKKILL', '/PID', str(prcId), '/F'], shell=True)\n    if prcId:\n        print(f\"\\n\\n\\tSUCCSESS: Server ran successfully with prcId: {prcId}\\n\\n\")\n    else:\n        print(f\"\\n\\n\\tWARNING: Server run could not be confirmed\\n\\n\")\n    return True\n\n\n# ### 2.1.4. This program is run in multiprocessing, in order to be able to run webserver and kill it after checking\n\n# In[30]:\n\n\nif __name__ == '__main__':\n    if \"django_template\" in venvsPath:\n        raise Exception(\"HANDLING ERROR: you can not run readme_setup.py from inside the django_template folder\")\n    prcId = None\n    a = multiprocessing.Process(target=main, args=(cloneProjectName, yourProjectName, venvsPath, yourProjectPath, djProjectPath, newEnvActPy))\n    b = multiprocessing.Process(target=run_server, args=(cloneProjectName, yourProjectName, venvsPath, yourProjectPath, djProjectPath, newEnvActPy))\n    c = multiprocessing.Process(target=test_server)\n    a.start()\n    a.join()\n    print(\"install is done\")\n    b.start()\n    c.start()\n    c.join()\n    print(f\"now deleting readme_setup.py from {os.getcwd()}\")\n    subprocess.call([\"del\", \"readme_setup.py\"], shell=True)\n    print(\"INSTALL COMPLETE\")\n\n",
			"file": "readme_setup.py",
			"file_size": 7246,
			"file_write_time": 132163908357497060,
			"settings":
			{
				"buffer_size": 7087,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/python_venvs/122_chess_play/web_project/chess/urls.py",
			"settings":
			{
				"buffer_size": 605,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/python_venvs/122_chess_play/web_project/web_project/my_stuff.py",
			"settings":
			{
				"buffer_size": 546,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"ma",
				"Material Theme: Advanced configuration"
			],
			[
				"Package Control: li",
				"Package Control: List Packages"
			],
			[
				"mat",
				"Material Theme: Advanced configuration"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Install Package Control"
			],
			[
				"",
				"About"
			],
			[
				"emo",
				"Emoji: Insert Emoji"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"INST",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 232.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/python_venvs/122_chess_play/web_project"
	],
	"file_history":
	[
		"/C/python_venvs/102_chess_game/README.md",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/setpip.py",
		"/C/python_venvs/345_test/False.env",
		"/C/python_venvs/pipenv_setup.py",
		"/C/python_venvs/102_chess_game/pipenv_setup.py",
		"/C/python_venvs/345_test/web_project/manage.py",
		"/C/python_venvs/102_chess_game/.env",
		"/C/python_venvs/345_test/.env",
		"/C/python_venvs/102_chess_game/adhogtest.py",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/setenv.py",
		"/C/python_venvs/345_test/Pipfile",
		"/C/python_venvs/345_test/Pipfile.lock",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2560_software/environments_pip/09_django_web_project/web_project/web_project/settings.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/7090_Transport/122_chess_play/2019-10-15-12-37-28-459218_122_chess_play_init/web_project/web_project/my_stuff.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/7090_Transport/122_chess_play/2019-10-15-12-37-28-459218_122_chess_play_init/web_project/web_project/settings.py",
		"/C/python_venvs/122_chess_play/web_project/web_project/mystuff.py",
		"/C/python_venvs/22_chess_play/code/Game/settings.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/7090_Transport/122_chess_play/2019-10-15-10-02-20-741158_122_chess_play_init/web_project/web_project/settings.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/7090_Transport/122_chess_play/2019-10-14-15-14-48-851342_122_chess_play_init/web_project/web_project/settings.py",
		"/C/python_venvs/999_alice_admin/www_admin/launch_template.pyw",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/mkdjangoenv.py",
		"/C/python_venvs/999_alice_admin/www_admin/call_alice.py",
		"/C/python_venvs/122_chess_play/launch_template.pyw",
		"/C/python_venvs/22_chess_play/launch_template.pyw",
		"/C/python_venvs/122_chess_play/Scripts/activate_this.py",
		"/C/python_venvs/122_chess_play/web_project/blog/templates/blog/components/i_css_scripts_foot.html",
		"/C/python_venvs/122_chess_play/web_project/chess/templates/chess/v_chess_detail.html",
		"/C/python_venvs/122_chess_play/web_project/chess/models.py",
		"/C/python_venvs/122_chess_play/web_project/chess/views.py",
		"/C/python_venvs/122_chess_play/web_project/blog/templates/blog/components/i_css_scripts_head.html",
		"/C/python_venvs/122_chess_play/web_project/blog/templates/blog/base.html",
		"/C/python_venvs/122_chess_play/web_project/chess/templates/chess/base.html",
		"/C/python_venvs/122_chess_play/web_project/web_project/settings.py",
		"/C/python_venvs/122_chess_play/web_project/web_project/urls.py",
		"/C/python_venvs/22_chess_play/code/chess/Board.py",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/setdjango.py",
		"/C/python_venvs/99_snipp_block/subprocess_kill_prc_pid.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/www_admin/launch_template.pyw",
		"/C/python_venvs/Taskkill",
		"/C/python_venvs/01_django_template/launch_template.pyw",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/Player.py",
		"/C/python_venvs/22_chess_play/code/chess/Player.py",
		"/C/python_venvs/22_chess_play/code/chess/urls.py",
		"/C/python_venvs/22_chess_play/code/chess/serializers.py",
		"/C/python_venvs/22_chess_play/code/chess/static/resources.js",
		"/E/22_chess/code2/chess/templates/chess/v_chess_detail.html",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/templates/articles/v_article_detail.html",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/templates/articles/v_articles.html",
		"/C/python_venvs/22_chess_play/code/chess/templates/chess/i_css_scripts_head.html",
		"/C/python_venvs/22_chess_play/code/chess/static/drag_and_drop.js",
		"/C/python_venvs/22_chess_play/code/chess/templates/chess/base.html",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/signups/urls.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/web_project/helper.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/signups/models.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/signups/forms.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/signups/views.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/signups/templates/signups/v_signup_form.html",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/urls.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/forms.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/views_posts.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/templates/blog/v_post_form.html",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/templates/blog/components/i_css_scripts_head.html",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/web_project/settings.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/web_project/blog/templates/blog/v_post_detail.html",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/testfiles/breadth_first_searches.py",
		"/C/Users/Lars/OneDrive/Dokumente/75 Alice/751000_Alice 2019-05-23 00-38-56-012337/all_classes/H_File.py",
		"/C/Users/Lars/OneDrive/Dokumente/70 Web/www_admin/appadmin/admin.py",
		"/C/python_venvs/99_snipp_block/dj_models.py",
		"/C/python_venvs/22_chess_play/code/chess/test.js",
		"/C/python_venvs/22_chess_play/code/chess/test.py",
		"/C/python_venvs/22_chess_play/code/Game/urls.py",
		"/C/python_venvs/22_chess_play/code/chess/templates/chess/v_chess_detail.html",
		"/C/python_venvs/22_chess_play/code/static/chess/chess_styles.css",
		"/C/python_venvs/22_chess_play/code/Figure.py",
		"/C/python_venvs/22_chess_play/code/Board.py",
		"/C/python_venvs/99_snipp_block/py_multiprocessing_pool.py",
		"/C/python_venvs/22_chess_play/code/Player.py",
		"/C/python_venvs/22_chess_play/code/chess/templates/chess/drag.js",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/tf_model_predict_argmax.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/time_perf_counter.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/22_chess_play.sublime-build",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2560_software/environments_pip/22_chess/temp.txt",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/testfiles/threading_example.py",
		"/C/python_venvs/21_chess/code/mytest.py",
		"/C/python_venvs/21_chess/code/Network2.py",
		"/C/python_venvs/21_chess/code/NNSimulate.py",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/mkenv.py",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_df_filter_rows_by_value.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_df_rename_selective_cols.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_df_rename_all_columns.sublime-snippet",
		"/C/python_venvs/21_chess/logs/2019-09-09-17-28-40-976278/train/events.out.tfevents.1568042921.BLUE-MOON.12592.262825.v2",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_io_xls_load_single_OR_multip.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/plt_io_bokeh_submit_form.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/03_tensorflow_gpu.sublime-build",
		"/C/python_venvs/99_snipp_block/subprocess_call_cmd_sequence.py",
		"/C/python_venvs/99_snipp_block/pd_DF_datetime_calendar_index_loan_payment_example.py",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/subprocess_call_sequence.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/re_sub.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/py_setattr_mult_values.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/py_io_pickle_save.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/py_io_pickle_load.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/py_io_json_loads.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/plt_pd_df_plot_df_altair.sublime-snippet",
		"/C/python_venvs/99_snipp_block/plt_chart_Altair_from_random_Df.py",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/os_media_path.sublime-snippet",
		"/C/Users/Lars/OneDrive/Dokumente/25_Work/2510_Python/setcmd.py",
		"/C/python_venvs/99_snipp_block/plt_chart_Altair_from_Df.py",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/dt_str_to_fileName_snippet.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/rd_normal_int.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/np_concat_tile_3d.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/np_rd_create_float_uniform.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/np_rd_create_float_normal.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/py_chart_altair_simple.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_df_plot_df_altair.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_df_move_col_to_front.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_io_xls_to_excel.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_io_xls_single_OR_multip.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_io_to_excel.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_io_load_html_tables_to_list_of_DFs.sublime-snippet",
		"/C/python_venvs/99_snipp_block/pd_io_read_html_multiple_tables.py",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_io_csv_walk.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_df_mk_random_df.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/np_tile_3d_example.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/np_concat_mat_and_array.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/nn_tf_conv.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/mult_io_pool_example.sublime-snippet",
		"/C/Users/Lars/AppData/Roaming/Sublime Text 3/Packages/User/snippets/pd_plot_df_altair.sublime-snippet",
		"/C/python_venvs/99_snipp_block/Chart_plot_Altair_from_Df.py"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cloneProjectName",
			"jpn",
			"readme_setup",
			"url",
			"newEnvActPy",
			"newEnv",
			"yourProjectPath",
			"cloneProjectName",
			"cloneProjectUrl",
			"cloneProjectPath",
			"install",
			"djProjectPath",
			"venvsPath",
			"myStuffPath",
			"parser.parse_args",
			"PID",
			"pid",
			"djProjectPaht",
			"venvsPath",
			"cloneProjectPath",
			"cloneProjectName",
			"yourProjectName",
			"cloneProjectName",
			"yourProjectName",
			"cloneProjectName",
			"yourHost",
			"django",
			"socket",
			"EMAIL_HOST_PASSWORD",
			"domain",
			"error loading board",
			"pk",
			"restUrl",
			"resturl",
			"local",
			"newEnvCode",
			"newProdParams",
			"templateCode",
			"web_project",
			"\\",
			"_django_project",
			"code",
			"22_chess_play",
			"code",
			"22_chess_play",
			"code",
			"\\",
			"22_chess_play",
			"Taskkill",
			"object",
			"reload",
			"start_game",
			"self.model",
			"self.modelPath",
			"modelLocation",
			"perfect",
			"LoginRequiredMixin",
			"ChessMainView",
			"media",
			"122_chess",
			"22_chess",
			"'chPid': CHPID,",
			"theme",
			"pd",
			"chess/base",
			"media",
			"CHPID",
			"createsuperuser",
			"migrate",
			"makemigrations",
			"projectName",
			"startproject",
			"name",
			"shutil",
			"installPath",
			"True",
			"\\",
			"22_chess_play",
			"boardStatetate",
			"boardState",
			"boardText",
			"outer_board",
			"request",
			"os.getpid()",
			"theUrl",
			"HttpResponseRedirect",
			"pk",
			"Game",
			"pk",
			"ChessInitView",
			"ChessMainView",
			"pid",
			"'pid':",
			"pid",
			"os.getpid",
			"pid()",
			"01_django_template",
			"copy",
			"maximize",
			"boardState",
			"boardOutState",
			"flip",
			"boardSaves",
			"save_",
			"playerColor",
			"set_figure",
			"value",
			"threats",
			"opponentKing",
			"self.w",
			"knightMoved",
			"kingMoved",
			"opponentKing",
			"allMoves",
			"console.log",
			"print",
			"['K'][0]",
			"]['",
			"['K'][0]",
			"['R1'][0]",
			"['R2'][0]",
			"abs(",
			"print(stepCount,",
			"restData.boardText",
			"rochade",
			"mkRochade",
			"'----';",
			"'----'"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/python_venvs/122_chess_play/web_project/web_project/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5279,
						"regions":
						{
						},
						"selection":
						[
							[
								4179,
								4179
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1674.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "/C/python_venvs/122_chess_play/web_project/chess/static/drag_and_drop.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16661,
						"regions":
						{
						},
						"selection":
						[
							[
								1075,
								1075
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 36,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1160,
										1161
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1052,
										1053
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/python_venvs/122_chess_play/web_project/chess/test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 137,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								88
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										110,
										111
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										88,
										89
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/python_venvs/pipenv_setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5941,
						"regions":
						{
						},
						"selection":
						[
							[
								2329,
								2329
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2329,
										2330
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2313,
										2314
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 314.4,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "readme_setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7087,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 22,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "/C/python_venvs/122_chess_play/web_project/chess/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 605,
						"regions":
						{
						},
						"selection":
						[
							[
								570,
								570
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										574,
										575
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										568,
										569
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "/C/python_venvs/122_chess_play/web_project/web_project/my_stuff.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 546,
						"regions":
						{
						},
						"selection":
						[
							[
								331,
								331
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 69.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.446185995481,
			1.0
		],
		"rows":
		[
			0.0,
			0.69957537155,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 354.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/22_chess_play.sublime-build",
	"project": "chess_game.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"dj",
				"99_snipp_block\\dj_models.py"
			],
			[
				"dj_mo",
				"99_snipp_block\\dj_models.py"
			],
			[
				"tes",
				"22_chess_play\\code\\test.py"
			],
			[
				"mult",
				"99_snipp_block\\py_multiprocessing_pool.py"
			],
			[
				"pd",
				"99_snipp_block\\pd_DF_datetime_calendar_index_loan_payment_example.py"
			],
			[
				"tim",
				"99_snipp_block\\pd_DF_datetime_calendar_index_loan_payment_example.py"
			],
			[
				"alt",
				"99_snipp_block\\plt_chart_Altair_from_random_Df.py"
			],
			[
				"plt",
				"99_snipp_block\\plt_chart_Altair_from_random_Df.py"
			],
			[
				"test",
				"test.py"
			],
			[
				"char",
				"C:\\python_venvs\\99_snipp_block\\Chart_plot_Altair_from_Df.py"
			],
			[
				"te",
				"test.py"
			],
			[
				"fi",
				"Figure.py"
			],
			[
				"comp",
				"scipy_compare_two_functions.py"
			],
			[
				"",
				"web_project\\settings.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 278.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 3
	}
}
